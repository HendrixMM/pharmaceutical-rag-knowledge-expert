name: Tests and Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      run-integration:
        description: "Run integration tests against real NeMo APIs"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]
      test-real-pdf-path:
        description: "Absolute path to a real PDF accessible to the runner"
        required: false
        default: ""

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install quality tools
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 mypy bandit safety
      - name: Check code formatting
        run: black --check --diff src tests scripts examples
      - name: Check import sorting
        run: isort --check-only --diff src tests scripts examples
      - name: Lint code
        run: flake8 src tests scripts examples
      - name: Security scan
        run: bandit -r src -f json -o bandit-report.json || true
      - name: Check dependencies
        run: safety check || true

  unit:
    needs: code-quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov python-dotenv
      - name: Run unit tests with coverage
        run: |
          pytest tests -k "not integration" --cov=src --cov-report=xml --cov-report=term-missing
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.python-version == '3.11'
        with:
          file: ./coverage.xml

  integration:
    if: ${{ github.event.inputs.run-integration == 'true' }}
    needs: unit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies for integration
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest python-dotenv aiohttp aiofiles
      - name: Test NVIDIA Build Rerank
        env:
          NVIDIA_API_KEY: ${{ secrets.NVIDIA_API_KEY }}
          SKIP_RERANK: ${{ vars.SKIP_RERANK }}
        run: make test-rerank
      - name: Run real API integration test
        env:
          NVIDIA_API_KEY: ${{ secrets.NVIDIA_API_KEY }}
          TEST_REAL_PDF_PATH: ${{ github.event.inputs.test-real-pdf-path }}
        run: |
          pytest -q -m integration tests/test_nemo_extraction_integration.py
